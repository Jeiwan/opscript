// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// spec.json
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _specJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5d\x5f\x73\xe2\x38\xb6\x7f\xdf\x4f\x71\x6a\x5e\x6e\xa7\x8a\x30\x90\x74\xd2\xc9\xdc\x27\x3a\x21\x13\xaa\x93\x90\x05\xd2\x3b\xf7\x5f\x4d\xc9\xb6\x0c\xaa\x18\xc9\x2b\xc9\x01\xf6\xd6\x7e\xf7\x5b\x92\x6c\x30\x89\x24\x22\x43\xa7\x6f\xed\x3c\x74\xf5\x70\x84\xf1\xef\x1c\xe9\xfc\x3f\xea\xff\xfd\x0b\x00\xc0\x2f\xc3\xc7\x3f\x3b\xbf\xfc\x06\xe6\xff\xf4\x27\x0b\xc6\x93\x5f\x7e\x2b\x29\xad\xed\xcf\xff\x44\x99\x2c\x69\x37\xbd\xbb\x71\xbf\x4e\x67\x79\xcc\x12\xac\xa8\x9d\x65\x67\xeb\x9b\x84\xe6\x85\xfe\xda\x03\x93\x33\x42\xa7\xed\xad\xaf\x15\xb2\xa4\x7e\xc2\xf3\x5c\xae\xe0\x05\x65\x05\x3e\xaa\x2f\x11\x33\xc6\xf5\x8a\x1e\x05\xb3\x06\x71\x8e\x56\xc0\x52\x88\x56\x12\x0b\x20\x02\xf2\x42\xcc\x70\x02\x8c\x4a\x06\x72\x86\x41\x48\x14\x3f\xb7\xe1\xd3\x64\x46\x34\x9d\x32\x09\x08\x28\x3b\x66\xf9\x6f\x80\x28\x10\x89\xe7\xea\x73\x94\x24\x38\x81\xad\x2f\x1d\xfd\xa2\x7f\xfa\x9f\xad\x0d\x87\x1e\x86\x93\xfe\x5f\x9f\x7a\x77\x6e\x4e\xad\x57\x38\x38\xe6\xe2\xd4\xe5\x89\x95\x53\x84\xda\x79\xc4\x0a\x69\xe5\xcc\x08\xcb\x82\x53\x01\x1d\x20\xa9\x86\xa2\x9f\xa4\x00\x76\xda\xd0\x05\x26\x67\x98\x2f\x88\xc0\xed\x37\xd8\xba\x4e\x4c\x5d\x8f\xf4\x27\xa3\x27\xa7\xf0\xcf\xba\x0d\x84\xdf\xb5\xc2\x9a\xcc\x30\xd0\x62\x1e\x61\x0e\x5d\xb7\x94\xdf\x62\x72\x6f\xe9\xae\x73\x4f\x3b\xe1\xa0\x26\x70\x3a\xbb\xf0\x10\xaa\x11\xa8\x37\x00\x8a\xe6\x18\x3e\x9d\x1c\x77\xcf\x8f\x42\x50\x7a\x44\xe7\x94\x9d\x13\x65\xd4\x04\xe5\x4e\xa9\x1d\x00\xe5\x89\x1b\xe5\x49\x30\xca\xb8\x09\xca\x93\x0f\x40\x79\xea\x46\x79\x1a\x8c\x32\x69\x82\xf2\xf4\x03\x50\x7e\x76\xa3\xfc\x1c\x8c\x12\x37\x41\xf9\xf9\x03\x50\x9e\xb9\x51\x9e\x05\xa3\x4c\x9b\xa0\x3c\xfb\x00\x94\xe7\x6e\x94\xe7\xa1\x28\xcf\x9b\xf8\x0b\xdb\x3f\xf3\x83\x50\xf6\xae\xaf\xdd\x38\x15\x31\x10\xe9\x85\x5d\xcf\x86\xda\xfb\xee\x1b\xdf\x45\x3f\xca\x02\xe0\xa1\xff\x7b\x6f\xd2\x77\x63\x28\xe9\x81\x30\x3e\x37\xd9\x96\xc7\x3b\xcd\xc5\x71\x90\x95\x1f\x3f\x7d\x75\xe3\x52\xc4\x50\xd9\xd8\xad\x43\x23\xd9\x88\x22\x92\x1c\xc5\x12\x27\x90\x72\x36\xf7\x89\xc8\x6d\xe0\xc2\xed\x9b\xdd\x9b\xf4\x8b\xe5\x03\xcc\xdb\xc9\xb1\x5f\x63\x54\xf4\x60\xb8\xc7\x0d\x75\x87\x02\xf0\x01\xb0\xaf\x07\xdf\xdd\x98\x15\x31\x74\x87\xda\x6d\x5e\xe8\x0e\x9d\xd4\x03\x84\x84\xbc\x10\xa5\x47\xa2\x15\x9c\xb4\x21\x21\x02\x45\x19\x4e\x6c\x60\x46\xc3\x47\x0f\x1a\x45\x0d\x55\xfb\x76\x47\x65\xd9\x85\xe5\x89\x1d\x51\x29\x55\x47\x0c\x34\x67\x2f\x58\x68\x81\x48\x96\x83\x5c\x30\x23\x18\x1d\xec\x09\x1b\xa2\x27\x1f\xa0\xa7\x70\x3c\x76\xf1\x78\xf0\x68\x12\xbc\x59\xb0\xc6\x74\x5d\xe4\x19\x89\x91\x0c\x82\x75\xff\xe4\x0e\x54\x35\x31\x74\xd7\xd9\xc5\xb4\xd7\xae\x9b\x17\x99\x24\x79\x46\xde\xb3\xf1\x86\xdf\xfb\x23\x37\x20\x4d\x0d\x44\xf4\xc5\xae\x33\x4a\x69\x9c\xc2\xf2\xb3\x57\x5c\x6a\x81\x47\x68\x57\x2c\x27\xa5\xc0\x72\x44\x38\xb0\xd4\x88\xca\x88\x2e\x47\x31\x16\x10\x69\x01\xd2\x8d\xf6\xa8\xec\x78\xca\x19\xb5\x19\x89\xd1\x70\xe2\xe6\x81\x22\x86\xb2\xc0\x1e\xa5\x6f\x21\x3c\x83\xe5\xb9\x83\x11\x9b\x05\x1e\x46\x28\x89\xa7\x24\x95\x33\x40\x34\x01\x41\x96\x72\x56\x72\x42\xc3\x47\x1c\x83\x3a\xb2\x6b\x1f\x46\x6d\x6f\x96\x7a\x35\xea\xf8\x6f\x3d\xcf\x99\xd5\xd4\x50\x46\xd8\x6d\xe6\xee\xbd\xb0\x63\x17\x8c\x17\x28\xdf\x3e\xb5\x6a\x33\x88\xf5\x6e\x78\x0b\xce\x1d\x03\x86\x87\x80\xa7\x0d\x8c\xe2\x07\x44\x80\xa7\x3e\x95\x7b\xda\x44\xe5\xda\x1d\xd1\x4a\x7a\xbb\x8e\xb1\x65\x99\x57\xf7\xce\x38\xc6\x7e\xed\xeb\x0e\x71\xc3\x23\xdc\xcf\x0d\x84\xf8\x01\x01\xae\x3b\xbe\x0d\x0f\x6f\xcf\x1a\x40\xfc\x80\xe8\xd6\xed\xaa\x86\x3b\xa9\xe7\x0d\x20\x7e\x80\x73\xfa\xc5\x09\xf1\x4b\x30\xc4\x2f\x0d\x20\x7e\xf9\xf1\x10\x2f\x9c\x10\x2f\x82\x21\x5e\x34\x80\x78\xf1\xe3\x21\x5e\x3a\x21\x5e\x06\x43\xbc\x6c\x00\xf1\xf2\xc7\x43\xec\x7d\x1d\x3b\x41\x2a\x5a\x20\xcc\x4b\xbb\xef\xb7\x9f\x37\x8b\x12\x0c\x39\x13\x44\x92\x17\x4b\x8d\xc5\x97\x44\x6a\x90\x43\xba\xb4\x1b\x77\x04\x51\x18\x04\xb4\x95\x44\x8a\x2c\xef\xfd\xe0\x79\xef\x87\xf0\xdc\x97\xdd\x9e\x79\xc2\x23\xd7\x9b\x7f\x65\x2c\xc3\x88\x6a\xb7\x32\xc2\x72\x81\x31\x05\x8c\xe2\x19\x44\x44\x56\x3b\x4e\x3f\x5f\xf8\x02\x8b\xaf\xc3\xe1\x9d\x0f\x62\x45\x0f\x15\x8f\xbd\x60\x14\x2c\x9e\x41\x0a\x11\x53\xbe\xb3\x81\xa9\xdd\x65\xca\x24\x74\x5a\x1a\x9f\x79\x80\x12\x61\xb7\x0d\xc3\xaa\xc0\x07\x1d\x3b\xce\xa1\x3b\x82\x2a\xc9\xa1\x28\xed\x89\xcc\x26\x28\x11\x30\x0e\x51\x55\xa5\x0d\x86\x77\xd5\x73\x47\x46\x8a\x16\x1a\x0f\x04\x07\xf1\x2e\x68\x57\x8c\x2a\xf7\x91\x1a\x17\x52\x87\xed\x9c\xd0\xa9\x77\x4f\x5e\xdd\xf6\xaf\xbe\xdd\x0d\xaf\xbe\x4d\x06\xf7\xfd\xef\xfd\xd1\xe0\xe6\x3f\xdc\xe0\x2c\x6b\x03\xc1\x46\x8e\x28\xd0\xe1\x37\xc3\xaf\x90\x22\x92\x59\xd1\xde\x23\xfe\x2c\x40\x72\x44\x05\x8a\x25\x61\x14\x90\x00\x42\x5f\x50\x46\x92\xaa\x2a\xad\x7c\xe8\x8d\xf7\xac\x84\x3b\xe5\x18\x49\xcc\x41\xce\x90\x39\xb6\xb5\x07\xfc\x9b\x00\x7a\xc7\xe2\xe7\x09\x99\xab\x38\x12\x67\x49\x6b\x53\xc9\x06\x11\x73\x92\x4b\xc0\x2f\x28\x2b\x90\xfe\xbd\x98\x51\x49\x68\x81\x85\xfa\x65\x39\x63\xc5\x54\x05\x9e\x30\x7c\xfc\xf3\x61\xf8\x08\x0b\x24\x00\x2f\x71\x5c\x48\x9c\xb4\x61\x52\x7b\x4f\xa5\x05\x33\xc1\xea\x2f\xdb\x6d\xd7\x22\x73\x22\x4c\xdb\xc1\xbf\xab\x7d\x7a\xd2\x76\x20\xa1\x78\x8a\x94\xfa\xd7\xab\x4e\x5d\xab\xb6\xf0\x32\x0e\xf8\xef\x05\xca\x94\xfa\x3d\xeb\x94\xff\xc1\x62\x46\x32\xbc\x9b\x17\xea\x69\x19\x16\xc2\x3c\x6a\xfd\xf5\x96\x7a\xea\x0b\x89\x31\xbc\x60\x2e\x90\x7e\x9b\xcf\xed\x8d\x46\x54\x0f\x1a\xe3\xbf\x17\x98\xc6\xb5\x07\xad\x5f\xa3\xb3\x4c\xcb\xff\xda\xa0\x4c\x5c\xce\x71\xac\xb9\x8d\xe7\x88\x4a\x12\x0b\xad\x86\x12\xac\xb8\x1f\xe1\x44\x29\xdb\xaf\x83\x47\xe8\x74\xce\xcf\x1c\x9b\xf9\xfe\xe9\x6e\x32\x18\x0f\x7e\xf7\x6f\xe3\xf5\xaa\xc0\x0d\x8c\x1c\xa7\x15\x04\x99\x76\xd5\x1f\x27\xd0\x6e\xb7\xe1\xbf\x8b\x4e\xe7\x34\x2e\x5d\x12\x96\x2a\x02\x45\xb2\xe0\x58\x68\x0a\x86\xbc\x88\xba\xea\x8f\x93\x37\x4b\xf3\x22\xca\x48\x0c\xcf\x78\x55\xae\xb5\x9f\x8d\x09\x2f\x30\xfc\x0a\x37\x28\x13\xd8\xa1\x0d\xe6\x39\xe2\x65\x30\x99\x12\x2e\xe4\xe6\x2d\x00\x4d\x11\xa1\x42\x1a\x23\xb6\xf9\x45\x28\xa8\x24\x19\x10\x09\x29\xa1\x89\x50\xbb\xb9\x7f\x75\x3d\xee\xc1\x1c\xc9\x78\xd6\x86\xb1\x44\x5c\x12\x3a\x85\x05\x91\x33\xb3\x63\x8b\x48\x68\xe9\xca\xda\x63\x5a\xea\x09\x71\xfd\xf7\x05\x8e\x99\x4e\xc9\x58\x5f\x80\xe3\x39\x22\x54\x3d\xf7\xfd\xaf\x62\x36\x0b\x8b\xd5\x8e\x24\x02\x38\xce\xd5\x46\x4f\xca\xaf\xa1\x2c\xab\xf1\x1c\x66\xe8\x05\x43\xa4\xac\x76\x3c\xc3\xf1\xb3\x72\x02\xb9\x56\xfe\x98\xea\x53\x5b\xe3\x79\xf9\x32\x6a\x6f\xe6\x9c\x25\x45\x8c\x01\x81\x28\x62\xf5\x43\x69\x91\x01\xc7\xa2\xc8\x64\x1b\x7a\xdb\xbf\x40\xb1\xf1\x6a\xf4\xdb\x01\xaa\x3d\xb1\x0d\x5f\x71\x8c\x0a\x81\xb7\x7e\xa5\x32\xae\xd5\xfb\x68\x7e\x94\x6a\x6b\xa5\x95\x1e\x20\xba\xaa\x31\xcc\xb0\x93\x08\x46\x5b\xf5\xdf\x9d\x17\x42\x42\x84\x21\xcf\x50\x6c\x8e\x87\x66\xb7\xd6\x55\x63\x32\x85\x42\x28\xb6\xea\xcf\x94\x33\xcc\x78\x82\xb9\x51\x57\x98\x70\x88\x19\xe7\x58\xe4\x8c\x26\xdb\xcc\x17\xb0\xc0\xdc\xfe\xd0\xc7\x22\xfa\x86\x57\x8a\x7f\x1c\x27\x18\xcf\xc7\xfa\xd3\x36\x28\xbb\xba\xcd\x12\x05\x51\x2b\xb8\x96\x69\xa6\xe1\xba\x67\x08\x27\x2d\xe8\xd4\x1a\x84\xe0\xba\x50\x7a\x0b\x10\x44\xc5\xb4\x05\x8c\x62\xc0\x4b\xc9\x11\x14\xb4\x10\x38\x31\xed\x59\xe6\xeb\x26\x77\xb7\x2e\x6f\x39\xdc\xf7\xad\xe3\xfd\x1e\x8b\xf6\x6a\x6d\xa8\x42\x70\x24\x84\x9a\x2b\x04\xdb\xf2\x77\x2a\x85\x32\x76\xf2\x99\xcd\xb1\xda\x06\x48\xc0\x6b\xf4\x2d\x88\x0a\xa9\x3e\x35\x6c\xd0\x4a\xba\xb4\x5e\x80\x52\x89\xf9\x02\x71\x97\xff\x30\xee\xff\xf5\xa9\xff\x70\xf5\x2e\xff\xe1\xd5\xda\x50\xff\xc1\x91\x3c\xfd\x41\xfe\x03\xc7\x99\xb6\xb1\x90\xb1\xf8\x19\xa4\xb2\x85\xac\xde\xef\xf6\x09\xd3\x94\xf1\xd8\x14\x15\x4a\xbb\x74\x61\x94\xe3\xda\xe8\x1d\x55\x8e\xe6\xda\xe6\x31\x0e\x19\xa3\xd3\xba\x17\x62\x76\x39\xb3\x79\x2d\x61\x76\xb1\xdb\x3d\x71\x09\x69\x97\x49\x6c\x62\x0d\xed\x15\x6c\x41\xb4\x32\x79\xc6\x2b\xaf\xed\x4a\x9d\xb6\x4b\x21\xc6\x54\x12\xfe\xda\x27\x31\xcf\x10\xad\x32\xda\x6a\x99\x44\xbf\xf1\xcc\x3e\xad\x35\xc3\x9c\x09\x09\x1c\xc7\x98\xca\x6c\x75\xbc\xde\xc6\x0a\xe8\xf0\xba\x3f\xee\x3f\xf6\x46\xbd\xc9\x70\x54\x95\x01\x30\x4d\x8e\x34\x3b\x67\x48\xcc\xb4\xb3\xa6\xb4\xcb\x5a\xf3\x6a\x35\x14\xad\xa0\xc6\xa7\xb5\xda\x45\x46\xc3\xd5\x56\xa7\x4c\x89\x95\x08\xfd\x30\xfd\x7a\x75\x53\x30\x48\x95\x45\x23\xc2\xab\x12\x9d\xf2\x7b\xd7\xf9\x6a\xac\xc8\xec\x55\xb7\x5d\xb2\x6c\xa0\x72\xf6\xd0\x36\x75\xf1\xb9\xf9\xb0\xb5\x2a\x94\x0d\xde\xc6\x44\x2f\x0f\xac\xe0\x95\x9f\x50\xd5\x98\x36\xc6\x5c\x59\x7d\xed\x47\x31\x9e\x08\x58\x10\xb5\x88\x66\xab\xd2\x7d\xa8\x19\xd1\x72\x8b\x26\x48\x22\xc3\x98\x90\x0d\xfe\x96\x81\xd7\xfd\xc7\xc9\xad\x93\x71\x86\x1a\x1a\xbf\x7a\xab\x06\x76\x86\x19\xf3\x36\xd6\x3a\x4e\x90\x7f\xe0\xb7\x36\x6d\xcd\xbf\xc7\x42\x1a\x17\xb2\x66\x3b\x37\xf5\x90\x9d\xc9\x3c\x5f\x47\x44\x83\x86\x88\x4b\x7b\x72\xbd\x59\x2a\xac\xd6\x09\x11\xf9\x62\x74\x6f\x23\x44\x93\x3e\x88\x2f\xf6\x2a\x88\xc3\x8a\x86\xf4\x40\xd4\xcc\xd6\x5b\x18\x9e\x52\x5c\x83\x4a\xdc\x17\xbb\x28\x9c\xae\xc0\xf2\xbd\x45\x37\x1f\x86\xfe\xdd\xd8\xdd\xdb\xd6\x7f\x35\xa1\xf0\xae\x7a\xa2\xbd\x94\x61\x07\xe1\x4a\x68\xc9\xd2\x41\xc0\xda\x8d\x1f\x3e\xfe\x39\xb8\x51\x4e\x86\x4e\x44\x4c\xd6\x7f\x57\xaf\xa7\xb3\x12\xda\x19\xa9\x74\x86\x9c\x61\xed\x82\x08\x7d\x84\x24\x9e\x63\x2a\x8d\x73\xa1\x6c\x17\x09\x7e\xf8\x3b\x1e\x4c\x99\xa5\xe1\xa0\xff\x70\x3d\xb8\x71\xb3\x56\x53\x43\x79\x6b\xaf\xa1\x04\xf0\xb6\x5f\x46\x9e\x24\xfd\x15\x67\x02\x43\xa4\xfc\x40\x13\xfb\xe9\xbf\x96\xf1\x17\xa6\x89\x4e\x83\xbc\xca\xa1\xa8\x33\x5e\x3a\x94\x6d\xe8\xe9\xc4\x90\xc6\xa1\x1d\x44\x66\xec\xdf\xe0\x06\x30\xe2\x19\xc1\xfc\x75\x5a\xc8\xc2\x22\xef\x48\x48\xa3\x71\x90\x0b\xfb\xf6\xf3\x24\x1f\x77\xfa\x6e\xd5\x68\x48\x77\x6b\x34\xc4\x48\x1e\x2f\x51\x2c\xb3\x95\x71\x85\x77\x38\x3d\x1a\xcf\x0e\x8f\xa7\xbe\x26\x14\xb9\x7d\x73\xec\xee\x05\x7b\xa7\xa7\xa3\x5f\xcd\xb8\x39\xbc\xa0\xa2\xe6\xeb\x78\xfc\x1b\x33\xe4\xe4\x42\xfb\x66\x04\xea\xd5\x90\x4c\xc7\x85\xf5\x5f\x6c\x3c\xea\x66\x34\xbc\xef\xdd\x4d\xc6\x93\xde\xd5\x37\x37\xb3\xea\x8b\x42\x15\x87\x3d\xac\xf9\x84\x32\x79\xb4\xec\x3a\x0c\x8c\xbd\xd9\x78\xed\xbe\x98\x80\x71\xcd\x90\x5a\xeb\x91\x4e\x37\x95\x0c\xaa\xec\x29\x91\x9b\x3c\x07\xca\xa4\xcb\xbb\xf9\x7d\xd4\xef\x4d\xfa\xa3\xc9\x6d\xef\xc1\xc9\x88\xfa\x9a\x50\x5f\xd8\xbe\x6f\x82\xbd\x9d\x2d\x95\x80\xde\xa4\xa5\xa3\x1d\x9a\xa0\x86\x60\x38\xf2\x2b\x41\xcb\xd2\x50\xcc\xf6\x0c\xc3\xa1\x31\xd7\x53\xf1\xbb\xf0\xdf\xf6\xc6\xb7\xdd\x73\xf7\x8c\x59\x45\x0f\x45\x6a\xaf\xbf\xbb\x0a\xd3\x2a\x9e\xdd\x5d\x99\x36\x21\x34\xc8\x05\x89\xf1\x6f\x65\xda\x59\xe7\x43\xc6\xb7\xbd\xe3\x93\xb3\x73\xed\x55\x68\xd7\x40\x7f\x3a\x1a\x3c\xf6\xef\xaf\x8f\xbb\xe7\x96\x3a\x9b\x82\x75\x72\xe6\xee\x8c\xa9\xe8\xa1\xb0\xed\xe5\xd2\x03\xc1\x66\x3a\x4b\x24\xb6\x30\xbf\x85\xe6\xf1\x74\x1a\xb8\x39\xf6\xf2\x7c\xb8\x0b\xb9\x71\x7e\xd7\x49\x57\xa5\xa7\x75\x89\xa1\x55\x69\xe4\xba\x23\x57\x2b\x6f\xd9\xbf\x5e\xe6\x6c\x6d\x0c\xf0\x45\x03\x86\x1a\x1a\x0f\xd8\xd9\xe0\x49\x0d\xba\x62\x02\x3f\x3b\x3a\x2d\x48\xaa\xa0\x01\x88\xc5\x93\x1d\x3c\x7c\xef\xdd\x0d\xae\x87\x8f\x2a\x16\x77\x63\xdc\x5a\x15\x88\x35\xb5\x27\x9d\x03\x44\x7e\x8f\x64\x3c\xc3\x42\x17\x19\xcc\x93\x95\x5e\x92\x15\xc8\x15\x96\x80\x84\x20\x53\x6a\x95\xde\xc3\xf7\xfe\xc8\x5d\x04\x2f\xc9\xa1\x0e\x99\x5d\x7e\xa1\x7d\x32\x37\x19\xc9\x85\x2e\x45\x94\xe6\x35\x22\x52\x6c\xf5\x68\xf8\x42\xed\xbb\xfe\x8d\x1b\x97\x26\x86\xa2\x72\x75\xff\xe8\xbc\x47\x18\xb4\x6f\x18\xe7\xc2\xe4\x89\xe2\x19\xd2\xd3\x3e\x5c\x40\x86\x53\xb9\xce\x30\xe5\x38\x26\x29\xc1\x09\xe4\x8c\x50\xdd\x9a\x82\xca\x2e\x00\x3f\xea\xf1\xd8\xeb\x43\xac\x17\x84\xa6\x4b\xec\xfb\xf4\x00\xc6\x74\x53\x89\xde\x65\x3d\xab\x77\xdf\xe5\x3a\xbc\x5e\x17\x6a\x56\xec\x9d\x0d\x07\x85\x1a\xe2\x34\xdc\x8d\x6f\x07\xbe\xbd\x6c\xc8\xa1\xf2\xb4\x07\x4d\xc1\x20\xc7\x33\x92\x2a\x1b\x62\x36\x6f\xa4\xcf\x68\x0b\x72\x8e\x05\xe6\x2f\x2a\xc6\x52\x9a\xc7\xb7\x63\xef\x7b\x7f\x38\xa1\x29\x5a\xa8\xf0\xec\x39\xcc\xc6\xc2\x53\x67\x31\x43\x7c\x6a\xf2\x95\x65\x43\x95\x05\xc5\xc0\x7d\xe4\x14\x2d\x14\xc5\x81\xfa\xf4\xea\x28\xc4\x1c\x65\xd9\x2e\x18\x43\x77\x4f\x9b\xa2\x85\x6e\x32\x7b\x4e\x62\x2f\x18\xa6\xa8\xaf\x6b\xdf\x3a\x89\xae\x53\xaf\x6a\xa3\xa1\x9d\xd9\x57\xdf\x74\x53\x83\xe1\xa6\x4b\x7b\xee\xb5\x59\x06\x79\x7b\xaa\xc9\x0b\x63\xc7\x5c\x6e\xb3\xb1\xdc\x0b\xbb\x7e\x6f\xd2\xdb\xaa\x4e\xfc\x76\x71\x95\x08\x48\x33\x92\xe7\x56\x34\x03\xb7\xf7\xa8\x68\xa1\xbe\x63\x70\x1a\xcc\x31\x84\x53\xcf\x87\x9b\x9e\x97\x63\xc9\x8e\x77\x65\x95\x1f\x3c\xf9\xfd\x87\x06\x63\x8e\xde\x0b\x51\xbc\xc9\x2d\x7b\x8e\x9c\x61\xed\x15\x9a\x64\x91\xe5\xe5\xdd\x17\x83\x68\x62\xe0\xeb\x47\x9d\x16\x74\x96\xd1\xe9\x71\x67\x19\xd9\x43\xd4\x00\x3f\x77\x52\xf5\x82\x13\x01\x64\x4a\x19\x57\xd1\x4a\x05\x08\xe6\x88\x3f\x3b\x5a\x00\xec\x40\xdd\x41\xb8\xa1\x86\x42\xfd\x7f\x86\xcf\x3d\x4c\xa4\x89\xa1\xe8\xf6\x0e\x4c\x0f\x8b\xce\x3d\x47\xa4\x89\xa1\xe8\xec\x3e\xc3\x4f\x43\xe7\x4e\x94\x68\x62\x28\x3a\xbb\x99\xfa\x69\xe8\xdc\xd3\x43\x9a\x18\x8a\xce\x5e\x3b\xfc\x69\xe8\xdc\x83\x43\x9a\x18\x8a\x6e\xef\x9a\xe2\x61\xd1\xb9\x67\x86\x34\x31\x14\xdd\xde\x55\xbd\x83\xa2\x73\x87\x58\x0f\xe1\x43\xd2\x97\x76\xcb\x1d\xea\x4f\x0d\x5e\xdf\xc9\xa6\x22\xc7\x6e\xcb\xb4\x1e\xad\x9d\xaa\xda\x94\x43\x6d\x00\x42\xf7\xa2\x44\xd6\xc1\x07\x5d\xef\xf5\xc1\x6d\x90\xbb\xdc\x5b\x89\xba\x93\x75\x3f\x22\x6f\xf9\xf0\x74\xef\xcf\x22\xac\x17\x84\x4a\xde\x5e\x72\xda\x2f\x7d\xb0\x69\x9b\x29\x71\xbf\xa3\xec\x5a\x01\xd8\x51\x79\x7d\xb5\x2c\x14\xad\xbd\xd7\xcc\x89\x36\xac\xf4\x5a\xbd\x5b\x68\xf5\xf5\xe1\xe9\x7e\xe7\xc5\x8b\xf5\x35\xa1\xa0\xed\xa3\x03\x87\x15\xf1\xba\xd1\x74\x87\x98\x3d\xed\x73\xe1\x3d\x73\x17\x8e\x7e\xa2\xe6\x83\x76\x8c\xef\x31\x67\xe7\xbd\xbf\xa3\xd1\xf5\x1d\xc1\xbd\x02\xd5\x3d\x2b\x56\x90\xb5\xfb\x3a\x5c\x31\x62\xed\x86\x8a\xb7\xf8\x1e\x07\x9e\xba\xb7\x26\x86\xe2\xb3\x87\x21\x4b\xaa\x7b\xd1\xcb\x0b\x63\x3a\x55\x53\xba\xaf\x01\xfd\xf5\x57\x96\xd4\x69\x81\x35\x4c\x6a\xb9\x98\x84\x08\x88\x15\x87\x12\x3f\x13\x9e\xbe\x7e\xeb\xbb\xf5\x53\x49\x0e\x64\x44\x6a\x3f\xa2\x01\xe6\x68\x84\x75\x16\x53\x5b\x9a\xfa\x34\x8b\x1e\xdf\x90\x24\xca\xb0\x29\x0d\xd6\x7a\x61\x5d\xd8\x6e\x7b\x63\x77\xab\x66\x6d\x49\x28\x46\xbb\xee\x3d\x00\xc6\xb2\x08\x5a\xe1\x2b\xcb\xd2\x36\x78\xe3\xdb\xeb\xde\xa4\xe7\x4e\x1b\x6c\x56\x04\x82\xfb\xec\xe8\xdc\xd0\x85\x11\x94\x1d\xd9\x51\x26\x48\x22\xe7\x3e\xa5\x78\x29\x75\x63\x8b\x9e\xf7\x43\x84\xbe\x6e\x47\x35\x4d\x2f\x92\xe9\x31\x9c\xf7\x8d\x98\x57\xf8\xdc\x57\xb1\x6d\x56\x84\x72\xc0\x2e\xde\xbd\x39\x20\x17\xac\x44\x5a\xb2\x21\x94\x0b\xea\x90\x67\x44\xca\x4c\x37\xdc\x13\xad\xe4\x13\xcc\xdd\xcc\x71\x27\x23\x36\x2b\x42\x99\x63\x3f\xdf\x7b\x33\x27\x65\x05\xff\x20\xee\x8c\xfa\xe3\xfe\xe8\x7b\xdf\x9d\x71\x5f\x2f\x08\xe4\xcd\x99\xbd\x52\x19\x12\x57\x59\x5b\x1f\xa1\xa0\xba\x82\xc5\xe2\xb8\xe0\xca\x89\x23\x14\x10\x85\x82\xd6\xdb\xd6\x07\x37\x10\x71\x44\xe3\x99\x13\xaf\x5b\x59\x6c\x56\x84\xba\x2d\xfb\x67\xdf\x7e\x24\x62\xb7\x72\xd8\xac\x08\x45\x6c\xef\x7d\xf9\xf9\x88\x27\x4f\x23\x77\x29\xac\x24\x87\x86\x96\xde\x7b\xb4\xed\x90\x1b\x0d\x8b\xb5\x61\x4c\x68\xac\x1b\x0d\x62\x46\x28\x74\xda\x97\x2d\x5d\x76\x47\x34\x41\x3c\x81\x85\xe9\x8d\x44\x52\xa2\x58\x47\x31\x66\xbe\x51\x8f\x74\x28\x15\xb0\x79\xa8\x6e\x8d\x94\x0c\x50\x92\x00\x82\x7f\x60\xce\x8e\xcb\xc1\xb0\x2a\x36\xd7\xd7\x33\x6c\x0d\x62\xc6\x8c\x0a\x22\xf4\x50\x2e\x4b\x61\xcd\x2d\x48\x59\x96\xb1\x85\x29\x0c\xa9\x9f\x6a\xc3\xb8\x88\x67\xd5\x00\x95\x8e\x15\x72\xce\x5e\x50\x94\xad\xa0\xa0\x22\xc7\x34\x51\xee\xb4\x19\xa8\x32\xea\x30\x5b\x29\x27\x3b\x46\x3c\xa9\xc6\x2e\x85\x64\x1c\x4d\x71\xe5\xaf\x3d\x4d\xfe\x18\x82\xc0\xb2\x05\x1c\x27\x45\x5c\x4e\x9a\xea\xb9\x52\x21\x2b\xef\x8d\x62\xb9\x60\xfc\xb9\xe2\x52\xa7\xdd\x3d\x69\x6d\x98\xc3\x71\x86\x56\xc0\x8b\x0c\xeb\xa6\x0d\xb6\x50\xf8\x08\x9d\x66\xdb\xa0\xd7\xb8\x5a\xa6\x4d\x65\x6d\x8a\xf5\x90\x6c\x35\x5e\xae\x07\x25\xc5\xac\x1e\xee\x7f\x32\xed\xe9\xd5\x89\xf9\xaf\xee\xff\x1c\xd5\xe6\x68\x36\xec\x52\xbc\xd0\xc3\x18\xc6\xe1\x94\x28\xdb\x66\x73\x86\xe9\x54\xce\x74\x8b\xaa\x34\xe3\x37\x17\xa7\x46\xab\x5b\x54\xf4\xe0\xf7\x5b\x77\x5a\xc8\x50\x43\x0f\xae\x2b\x31\x74\xb0\x36\x12\x4e\xa6\xb3\x7d\xfb\x48\x4c\x37\x9f\xaf\x55\x71\xb3\x22\x90\x01\xc8\x9e\xb1\x3d\x48\xd7\x9e\x99\x91\xf6\xb5\x22\x8e\x86\x77\xee\x94\x80\x26\x86\x46\x5c\x76\xe5\xd4\x20\xe2\x3a\x44\xb8\xf5\xfa\x52\x44\x1b\x03\x3c\x1b\xba\xc1\x65\x90\xf6\x21\xbb\x1d\xb7\xe8\x95\x57\xe8\x39\x21\x6e\x6e\xcc\xab\x66\xc3\x6a\x30\x95\xc2\xe3\x4c\xea\x3b\x02\x4a\xa4\x19\x4e\x2d\xed\x7b\x23\x7f\xe3\xcc\xa8\x59\xe3\x8c\xdd\xd5\x68\xde\x38\x63\x8e\x6b\x83\xce\x99\xf1\xad\x27\xee\xd2\xc4\xd0\x93\x69\xaf\x36\x1c\xf0\x64\x8e\x6f\x7b\xc7\x5d\x2b\x12\x5f\x7b\x70\x49\x0e\x45\x63\x4f\xf5\x1c\x18\x8d\xb5\x29\x78\x3c\xf8\x4f\x77\x7f\x86\x26\x86\x1a\x8d\xb0\x7f\xeb\xc5\x62\x4c\x6a\x63\x0c\x62\x56\xa5\xac\xb4\x19\xa8\x0c\x62\x6d\x64\x1d\x67\xda\xe6\x6e\xdd\xa8\x0a\x9f\xaa\x59\xa7\x9c\xe5\xb9\xf6\x0c\xe5\x91\x05\xba\xe7\x66\xf5\x06\x17\xab\x5f\x1e\xa8\x9d\x2b\xb2\xdd\xac\x8e\xac\xaf\x3f\x9e\xb8\x53\x8e\x25\x39\x54\x47\xba\x7a\x6b\x20\xc2\xd3\x46\x86\xbf\x4a\x1c\x23\x10\xd8\x38\xb1\xba\xab\x6b\xb7\x5d\xf7\x5e\x82\xdb\xe8\x0e\x5c\x7b\x9a\xc6\xdb\x6f\xb3\x53\xf3\x2f\x98\x4b\xef\x8b\x05\xb2\xb7\x11\x4d\x86\x3b\xe7\x88\x6a\x4b\x42\x03\x10\x97\x91\xb3\x23\xb4\x4c\x17\x85\x4c\x11\x6d\xa6\x84\xac\x43\x44\xb5\x21\xa3\xb7\x5c\x18\x3d\xb9\x15\xcf\xeb\x7f\x79\xe9\xd5\xcc\x59\xd7\x99\x4e\xf8\xe9\xff\x2a\xd3\xe4\xc9\x27\xd6\xa7\x06\x69\xf2\xe0\xeb\xe3\xbd\x77\xad\xaf\xbd\x32\x24\xad\xb7\x51\xd7\x12\xe1\x7a\x14\x97\x0a\xcc\x95\x16\x8a\x70\xca\x38\xb6\x94\x0f\xec\xcd\x65\xbe\x62\x48\x83\x5a\xc8\xb9\xdd\xa8\xfc\xec\x14\x82\xae\xee\xf9\x70\x36\xa8\x4d\xef\xdf\x02\x63\x47\x8a\x5f\x30\x85\xc5\x0c\xd3\xbd\xc0\xba\x6b\x1f\xcd\x6a\xb2\xe7\x76\x17\xd5\x35\xef\x1b\x54\x9c\xdd\x79\xd7\x8e\x7d\xd4\x46\xf2\x02\x87\xd7\xe8\xbf\xf7\x47\xfe\x4e\x85\xf5\x82\x50\x0e\xed\xdf\x35\xf4\x83\x36\xc4\xdf\x06\x93\x5b\x4f\x2f\x79\x49\x0e\x75\x85\x1d\x55\x5d\x98\x13\x0a\x73\xe4\x18\xac\x7a\x57\xd5\x7a\xa9\xd0\x2b\xcf\xb0\x8a\x44\xd7\xf9\x06\x8e\xe8\x14\xc3\x27\x15\x9a\x1d\x13\x1a\x67\x85\x20\x2f\xf8\x68\x47\x31\xfb\x0f\x4f\x35\xfb\x8f\x06\xe5\x6c\xc7\xcd\x12\xcd\xcb\xd9\x78\x59\x22\x69\x52\xd8\xfe\xcb\x3f\xff\x2f\x00\x00\xff\xff\xbc\x57\xbb\x38\x3c\x73\x00\x00")

func specJsonBytes() ([]byte, error) {
	return bindataRead(
		_specJson,
		"spec.json",
	)
}

func specJson() (*asset, error) {
	bytes, err := specJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "spec.json", size: 29500, mode: os.FileMode(420), modTime: time.Unix(1574843978, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"spec.json": specJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"spec.json": &bintree{specJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

